{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 To run: \
1. Clone the GitHub repo in selected directory in terminal (git clone [copy http or ssh link from visiting the submission link]\
2. Go to directory you saved the GitHub repo \
3. pip install textblob \
4. Run the following command: python madlibs.py \
5. Have fun! \
\
Rules: \
This program is an imitation of madlibs, a fun and simple game where you fill in the blanks of a given written piece. The blanks only require you to follow one thing: that the words you fill in correspond to the part of speech. \
\
You can do single player or two player. You can create a new madlib then have someone play it or play a computer generated one. \
\
Tooling: \
Simple python language. Textblob library to understand what part of speech tags are attached to a word. This is to verify the word you entered fulfill the the part of speech required and for generation of new madlibs to be created. \
\
Python was simple to start with and a lot of libraries were easily accessible for a quick prototype of the game. \
\
Currently, we want to keep the prototype simple and not store any of the generated madlibs in a database. However, we could give a local option to save the new user generated madlib into a python file to be processed later on for quick loading into the game as an alternative. }